Разработать программу для получения информации о земельных участках с сайта Портал пространственных данных Национальная система пространственных данных Публичная кадастровая карта (PKK): https://nspd.gov.ru/map?thematic=PKK&active_layers=36473%2C849453%2C849407%2C37298%2C37299%2C37294%2C36048

## Требования к программе
GIT-репозиторий.

### Моё видиние рабочего процесса

1. В первых версиях работа в консольном режиме. Однако необходимо предусмотреть дополнение работой в графическом интерфейсе. Это расширение функциональности может произойти в ближайших минорных релизах ещё до выхода первой стабильной версии программы. Поэтому, на этапе проектирования необходимо продумать перспективу использования картографического движка для подготовки исходной информации (просмотра и редактирования зоны интерерса) и отображения результата. Требования к его возможностям присутствуют ниже по тексту.

2. При запуске указываем при помощи ключа командной строки имя входного файла с описанием зоны интереса. На первом этапе это будет файл в формате kml (обязательна поддержка версии 2.2, желательна -- всех) с описанием объектов интереса: линий, полигонов и проч. Входных файлов может быть несколько и они могут быть (впоследствии) различных форматов. Возможно, целесообразно объединить все форматы входных файлов под одним ключём с автоматическим парсингом.

3. Программа в автоматическом режиме находит и скачивает информацию о земельных участках с PKK (обязательные данные: геометрия и атрибуты: кадастровый номер, категория земель и вид разрешенного испольтзования; желательно получить плный пакет атрибутивной информации ) и сохраняет её локально в следующтх форматах (по ключам командной строки):
  - geojson (по умолчанию);
  - csv;
  - sqlite.
  Все долгоидущие процессы должны отображаться прогресс-баром.

4. Должны формироваться отчёты в форматах html, pdf, markdown, docx и xml (по ключам командной строки). Форматы могут задаваться шаблонами, но и вид по умолчанию должен быть приемлемым и удобочитаемым.

5. Допускается одновременное множественное использование ключей выбора форматов.

6. Необходимо предусмотреть возможность модульного расширения списков входных и выходных форматов.

7. Предусмотреть возможность сохранения в формате интерактивной карты (по отдельному ключу), отображающей одним слоем (цветом) исходную зону интереса, вторым слоем (цветом) полученные земельные участки, закрашенные различными цветами в соответствии с категорией земель или видом разрешенного испольтзования -- на выбор по селектору. При наведении курсора на участок должно всплывать сообщение с обязательной информацией, а при клике по нему -- с полным набором аттрибутивной информации. Поскольку в зону интереса могут попадать десятки тысяч объектов, необходимо решить вопрос оптимизации быстродействия и использования памяти при отображении интерактивной карты. Этот пункт проектировать с перспективой включения интерактивной карты в состав собственного графического интерфейса приложения (в перспективе). 

8. Снабдить программу подробной документацией в различных форматах: html, pdf, etc:
  - Руководством по установке и администрированию;
  - Руководством пользователя;
  - Руководством разработчика.

9. Обеспечить покрытие тестами осмысленного и достаточного количества кода.

10. Вести кодовую базу в виде репозитория github: https://github.com/asm679/pkk_search

11. Использовать лучшие практики и ситемы разработки. Внедряй MVP, SOLID, Agile, etc.

12. Подробнейшим образом документировать процесс разработки. 

13. Вести Wiki-страницу проекта. 

14. Вести список изменений. 

15. Каждое логически законченное (даже незначительное) изменение кода оформлять коммитом с осмысленным коментарием.  Комментарий создавай во временном файле, который удаляй после коммита. Перед коммитом выполняй git add.

16. После завершения крупного раздела плана или по моей просьбе создавай тэг на коммит с аннотацией расширяющей и дополняющей комментарий коммита. Каждый минорный релиз сопровождать тегом с подробным описанием нового функционала и изменений. 

17. При обнаружении ошибок создавать Issues. При их устранении -- отражать это закрытием соответствующее Issue с подробным пояснением проделанной работы и внесённых изменений.

18. Настроить автоматическое тестирование при загрузке кода на github.

19. Оформить и поддерживать в актуальном систоянии github-овскую документацию (Readme.md, etc.), оформлять её в лучших стилях и традициях github, использовать виджеты, изображегния, скриншоты, скринкасты и прочее.

20. Во всех видах документации обязательно использовать иллюстративный материал. Для его создания использовать сторонние сервисы для создания блок-схем, диаграмм, генерации изображений нейросетями. При невозможности непосредственного выполнения задания на создание визуального контента приводить подробную инструкцию по его созданию, включая ссылку на инструмент, описание создания контента (в том числе: скрипты, описание диаграмм как кода, промпты для нейросетей).

## Этап предварительной подготовки

Прежде чем начинать писать код и проектировать программу необходимо провести исследование и найти наилучшие из возможных решений для выполнения задачи. Все принятые решения необходимо документиорлвать для облегчения дальнейшей разработки.

Необходимо разобраться со способами получения информации из PKK, один из которых (не самый простой, удобный и лучший), но рабочий описан в блоге [QGIS кадастр](https://vk.com/wall-224846721_54). Нужно сначала научиться выполнять аналогичные действия без использования окна браузера. После этого можно заняться проектированием программы.

Ещё раз подчеркну необходимость документирования принятых решений, при необходимости -- редактировать и создавать новые правила проекта. 

Имя файла с принятыми решениями пусть будет: Директивы.md

